{"version":3,"sources":["filters.js","TableContainer.js","App.js","index.js"],"names":["Filter","column","style","marginTop","canFilter","render","DefaultColumnFilter","filterValue","setFilter","length","preFilteredRows","Input","value","onChange","e","target","undefined","placeholder","SelectColumnFilter","id","options","React","useMemo","Set","forEach","row","add","values","CustomInput","type","map","option","key","TableContainer","columns","data","renderRowSubComponent","useTable","defaultColumn","initialState","pageIndex","pageSize","useFilters","useSortBy","useExpanded","usePagination","getTableProps","getTableBodyProps","headerGroups","page","prepareRow","visibleColumns","canPreviousPage","canNextPage","pageOptions","pageCount","gotoPage","nextPage","previousPage","setPageSize","state","Table","bordered","hover","headerGroup","getHeaderGroupProps","headers","getHeaderProps","getSortByToggleProps","isSorted","isSortedDesc","generateSortingIndicator","getRowProps","cells","cell","getCellProps","isExpanded","colSpan","Row","maxWidth","margin","textAlign","Col","md","Button","color","onClick","disabled","min","width","max","defaultValue","event","Number","App","useState","setData","useEffect","a","fetch","response","json","body","contacts","results","console","log","doFetch","Header","Cell","getToggleRowExpandedProps","accessor","disableSortBy","filter","location","coordinates","latitude","longitude","fontSize","num","pickEmoji","Container","original","name","first","last","city","street","postcode","picture","Card","CardImg","top","src","large","alt","CardBody","CardTitle","CardText","number","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1b8504f6.chunk.js","sourcesContent":["import React from 'react';\nimport { Input, CustomInput } from 'reactstrap';\n\nexport const Filter = ({ column }) => {\n  return (\n    <div style={{ marginTop: 5 }}>\n      {column.canFilter && column.render('Filter')}\n    </div>\n  );\n};\n\nexport const DefaultColumnFilter = ({\n  column: {\n    filterValue,\n    setFilter,\n    preFilteredRows: { length },\n  },\n}) => {\n  return (\n    <Input\n      value={filterValue || ''}\n      onChange={(e) => {\n        setFilter(e.target.value || undefined);\n      }}\n      placeholder={`search (${length}) ...`}\n    />\n  );\n};\n\nexport const SelectColumnFilter = ({\n  column: { filterValue, setFilter, preFilteredRows, id },\n}) => {\n  const options = React.useMemo(() => {\n    const options = new Set();\n    preFilteredRows.forEach((row) => {\n      options.add(row.values[id]);\n    });\n    return [...options.values()];\n  }, [id, preFilteredRows]);\n\n  return (\n    <CustomInput\n      id='custom-select'\n      type='select'\n      value={filterValue}\n      onChange={(e) => {\n        setFilter(e.target.value || undefined);\n      }}\n    >\n      <option value=''>All</option>\n      {options.map((option) => (\n        <option key={option} value={option}>\n          {option}\n        </option>\n      ))}\n    </CustomInput>\n  );\n};\n","import React, { Fragment } from 'react';\nimport {\n  useTable,\n  useSortBy,\n  useFilters,\n  useExpanded,\n  usePagination,\n} from 'react-table';\nimport { Table, Row, Col, Button, Input, CustomInput } from 'reactstrap';\nimport { Filter, DefaultColumnFilter } from './filters';\n\nconst TableContainer = ({ columns, data, renderRowSubComponent }) => {\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    page,\n    prepareRow,\n    visibleColumns,\n    canPreviousPage,\n    canNextPage,\n    pageOptions,\n    pageCount,\n    gotoPage,\n    nextPage,\n    previousPage,\n    setPageSize,\n    state: { pageIndex, pageSize },\n  } = useTable(\n    {\n      columns,\n      data,\n      defaultColumn: { Filter: DefaultColumnFilter },\n      initialState: { pageIndex: 0, pageSize: 10 },\n    },\n    useFilters,\n    useSortBy,\n    useExpanded,\n    usePagination\n  );\n\n  const generateSortingIndicator = (column) => {\n    return column.isSorted ? (column.isSortedDesc ? ' ðŸ”½' : ' ðŸ”¼') : '';\n  };\n\n  const onChangeInSelect = (event) => {\n    setPageSize(Number(event.target.value));\n  };\n\n  const onChangeInInput = (event) => {\n    const page = event.target.value ? Number(event.target.value) - 1 : 0;\n    gotoPage(page);\n  };\n\n  return (\n    <Fragment>\n      <Table bordered hover {...getTableProps()}>\n        <thead>\n          {headerGroups.map((headerGroup) => (\n            <tr {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map((column) => (\n                <th {...column.getHeaderProps()}>\n                  <div {...column.getSortByToggleProps()}>\n                    {column.render('Header')}\n                    {generateSortingIndicator(column)}\n                  </div>\n                  <Filter column={column} />\n                </th>\n              ))}\n            </tr>\n          ))}\n        </thead>\n\n        <tbody {...getTableBodyProps()}>\n          {page.map((row) => {\n            prepareRow(row);\n            return (\n              <Fragment key={row.getRowProps().key}>\n                <tr>\n                  {row.cells.map((cell) => {\n                    return (\n                      <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\n                    );\n                  })}\n                </tr>\n                {row.isExpanded && (\n                  <tr>\n                    <td colSpan={visibleColumns.length}>\n                      {renderRowSubComponent(row)}\n                    </td>\n                  </tr>\n                )}\n              </Fragment>\n            );\n          })}\n        </tbody>\n      </Table>\n\n      <Row style={{ maxWidth: 1000, margin: '0 auto', textAlign: 'center' }}>\n        <Col md={3}>\n          <Button\n            color='primary'\n            onClick={() => gotoPage(0)}\n            disabled={!canPreviousPage}\n          >\n            {'<<'}\n          </Button>\n          <Button\n            color='primary'\n            onClick={previousPage}\n            disabled={!canPreviousPage}\n          >\n            {'<'}\n          </Button>\n        </Col>\n        <Col md={2} style={{ marginTop: 7 }}>\n          Page{' '}\n          <strong>\n            {pageIndex + 1} of {pageOptions.length}\n          </strong>\n        </Col>\n        <Col md={2}>\n          <Input\n            type='number'\n            min={1}\n            style={{ width: 70 }}\n            max={pageOptions.length}\n            defaultValue={pageIndex + 1}\n            onChange={onChangeInInput}\n          />\n        </Col>\n        <Col md={2}>\n          <CustomInput\n            type='select'\n            value={pageSize}\n            onChange={onChangeInSelect}\n          >\n            >\n            {[10, 20, 30, 40, 50].map((pageSize) => (\n              <option key={pageSize} value={pageSize}>\n                Show {pageSize}\n              </option>\n            ))}\n          </CustomInput>\n        </Col>\n        <Col md={3}>\n          <Button color='primary' onClick={nextPage} disabled={!canNextPage}>\n            {'>'}\n          </Button>\n          <Button\n            color='primary'\n            onClick={() => gotoPage(pageCount - 1)}\n            disabled={!canNextPage}\n          >\n            {'>>'}\n          </Button>\n        </Col>\n      </Row>\n    </Fragment>\n  );\n};\n\nexport default TableContainer;\n","import React, { useEffect, useState, useMemo } from 'react';\nimport {\n  Container,\n  Card,\n  CardImg,\n  CardText,\n  CardBody,\n  CardTitle,\n} from 'reactstrap';\nimport TableContainer from './TableContainer';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { SelectColumnFilter } from './filters';\n\nconst App = () => {\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    const doFetch = async () => {\n      const response = await fetch('https://randomuser.me/api/?results=100');\n      const body = await response.json();\n      const contacts = body.results;\n      console.log(contacts);\n      setData(contacts);\n    };\n    doFetch();\n  }, []);\n\n  const renderRowSubComponent = (row) => {\n    const {\n      name: { first, last },\n      location: { city, street, postcode },\n      picture,\n      cell,\n    } = row.original;\n    return (\n      <Card style={{ width: '18rem', margin: '0 auto' }}>\n        <CardImg top src={picture.large} alt='Card image cap' />\n        <CardBody>\n          <CardTitle>\n            <strong>{`${first} ${last}`} </strong>\n          </CardTitle>\n          <CardText>\n            <strong>Phone</strong>: {cell} <br />\n            <strong>Address:</strong>{' '}\n            {`${street.name} ${street.number} - ${postcode} - ${city}`}\n          </CardText>\n        </CardBody>\n      </Card>\n    );\n  };\n\n  const columns = useMemo(\n    () => [\n      {\n        Header: () => null,\n        id: 'expander', // 'id' is required\n        Cell: ({ row }) => (\n          <span {...row.getToggleRowExpandedProps()}>\n            {row.isExpanded ? 'ðŸ‘‡' : 'ðŸ‘‰'}\n          </span>\n        ),\n      },\n      {\n        Header: 'Title',\n        accessor: 'name.title',\n        disableSortBy: true,\n        Filter: SelectColumnFilter,\n        filter: 'equals',\n      },\n      {\n        Header: 'First Name',\n        accessor: 'name.first',\n      },\n      {\n        Header: 'Last Name',\n        accessor: 'name.last',\n      },\n      {\n        Header: 'Email',\n        accessor: 'email',\n      },\n      {\n        Header: 'City',\n        accessor: 'location.city',\n      },\n      {\n        Header: 'Hemisphere',\n        accessor: (values) => {\n          const { latitude, longitude } = values.location.coordinates;\n          const first = Number(latitude) > 0 ? 'N' : 'S';\n          const second = Number(longitude) > 0 ? 'E' : 'W';\n          return first + '/' + second;\n        },\n        disableSortBy: true,\n        Filter: SelectColumnFilter,\n        filter: 'equals',\n        Cell: ({ cell }) => {\n          const { value } = cell;\n\n          const pickEmoji = (value) => {\n            let first = value[0]; // N or S\n            let second = value[2]; // E or W\n            const options = ['â‡–', 'â‡—', 'â‡™', 'â‡˜'];\n            let num = first === 'N' ? 0 : 2;\n            num = second === 'E' ? num + 1 : num;\n            return options[num];\n          };\n\n          return (\n            <div style={{ textAlign: 'center', fontSize: 18 }}>\n              {pickEmoji(value)}\n            </div>\n          );\n        },\n      },\n    ],\n    []\n  );\n\n  return (\n    <Container style={{ marginTop: 100 }}>\n      <TableContainer\n        columns={columns}\n        data={data}\n        renderRowSubComponent={renderRowSubComponent}\n      />\n    </Container>\n  );\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}